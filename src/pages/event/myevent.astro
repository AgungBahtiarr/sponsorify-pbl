---
import EventLayout from "@/layouts/EventLayout.astro";
import EventTable from "@/components/eventtable";
import EventForm from "@/components/eventform";
import { db, Events, Users, eq } from "astro:db";
import NoEvent from "@/components/noevent";
import { number } from "zod";

const oauthUser = await Astro.locals.currentUser();
const authUser = await db
  .select()
  .from(Users)
  .where(eq(Users.email, oauthUser.emailAddresses[0].emailAddress));

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const method = formData.get("method");

  if (method === "add") {
    const name = formData.get("name");
    const description = formData.get("description");
    const rawDate = formData.get("startDate");
    const startDate = new Date(rawDate.toString());
    const proposal = formData.get("proposal");
    const location = formData.get("location");

    await db.insert(Events).values({
      id: null,
      name: name.toString(),
      description: description.toString(),
      location: location.toString(),
      startDate: startDate,
      proposal: proposal.toString(),
      idUser: authUser[0].id,
    });

    return Astro.redirect("/event/myevent");
  }

  if (method === "delete") {
    const idEvent = formData.get("id");

    await db.delete(Events).where(eq(Events.id, idEvent as unknown as number));
  }
}

const events = await db.select().from(Events);
---

<EventLayout title="My Events">
  {
    events.length === 0 ? (
      <div class="h-screen">
        <div class="flex justify-center items-center h-[80%]">
          <NoEvent client:load />
        </div>
      </div>
    ) : (
      <div class="mt-6">
        <EventTable client:only="react" eventList={events}>
          <div slot="eventForm">
            <EventForm client:load />
          </div>
        </EventTable>
      </div>
    )
  }
</EventLayout>
