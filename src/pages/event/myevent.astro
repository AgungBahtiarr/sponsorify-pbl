---
import EventLayout from "@/layouts/EventLayout.astro";
import EventTable from "@/components/eventtable";
import EventForm from "@/components/eventform";
import { db, Events, Users, eq } from "astro:db";
import NoEvent from "@/components/noevent";
import { Event } from "@/lib/event";

import { utapi } from "@/server/uploadthing";

const oauthUser = await Astro.locals.currentUser();
const authUser = await db
  .select()
  .from(Users)
  .where(eq(Users.email, oauthUser.emailAddresses[0].emailAddress));

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const method = formData.get("method");

  if (method === "add") {
    const name = formData.get("name");
    const description = formData.get("description");
    const rawDate = formData.get("startDate");
    const proposal = formData.get("proposal");
    const location = formData.get("location");
    const idUser = authUser[0].id;
    const addEvent = Event.addEvent(
      name,
      description,
      rawDate,
      proposal,
      location,
      idUser,
    );

    if (addEvent) {
      Astro.redirect("/event/myevent");
    }
  }

  if (method === "delete") {
    const idEvent = formData.get("id");
    const key = formData.get("key");
    const fileName = key.toString().split("/");
    await utapi.deleteFiles(fileName[4]);
    await db.delete(Events).where(eq(Events.id, idEvent as unknown as number));
  }
}

const events = await db.select().from(Events);
---

<EventLayout title="My Events">
  {
    events.length === 0 ? (
      <div class="h-screen">
        <div class="flex justify-center items-center h-[80%]">
          <NoEvent client:load />
        </div>
      </div>
    ) : (
      <div class="mt-6">
        <EventTable client:load eventList={events}>
          <div slot="eventForm">
            <EventForm client:load />
          </div>
        </EventTable>
      </div>
    )
  }
</EventLayout>
